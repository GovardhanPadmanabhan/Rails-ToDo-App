image: "ruby:2.6.3"

services:
  - postgres:11.4
  
variables:
  POSTGRES_DB: todo_test
  POSTGRES_HOST: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: root

stages:
  - test
  - deploy

before_script:
  - apt-get update -qq && apt-get install -y -qq postgresql postgresql-contrib libpq-dev cmake
  - apt-get install apt-transport-https
  - echo "deb https://cli-assets.heroku.com/branches/stable/apt ./" > /etc/apt/sources.list.d/heroku.list
  - wget -O- https://cli-assets.heroku.com/apt/release.key | apt-key add -
  - apt-get update
  - apt-get install -y heroku
  - ruby -v
  - which ruby
  - gem install bundler --no-document
  - gem install dpl
  - bundle install --jobs $(nproc)  "${FLAGS[@]}"

test:
  stage: test
  script:
    - echo "Testing"
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
    - bundle exec rake db:schema:load RAILS_ENV=test
    - bundle exec rspec
    
staging:
  type: deploy
  variables: 
    HEROKU_API_KEY: $HEROKU_API_KEY
  script:
  - gem install dpl
  - dpl --provider=heroku --app=rails-todo-staging --api-key=$HEROKU_STAGING_API_KEY
  #- "curl -n -X POST https://api.heroku.com/apps/$HEROKU_STAGING_APP_NAME/ps -H \"Accept: application/json\" -H \"Authorization: Bearer ${HEROKU_API_KEY}\" -d \"command=bundle exec rails db:migrate\""
  - heroku run rake db:migrate --exit-code --app rails-todo-staging
  only:
  - master

production:
  type: deploy
  variables: 
    HEROKU_API_KEY: $HEROKU_API_KEY
  script:
  - gem install dpl
  - dpl --provider=heroku --app=rails-todo-production --api-key=$HEROKU_PRODUCTION_API_KEY
  #- "curl -n -X POST https://api.heroku.com/apps/$HEROKU_PRODUCTION_APP_NAME/ps -H \"Accept: application/json\" -H \"Authorization: Bearer ${HEROKU_API_KEY}\" -d \"command=bundle exec rails db:migrate\""
  - heroku run rake db:migrate --exit-code --app rails-todo-production
  only:
  - tags
